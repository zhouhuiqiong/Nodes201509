1、DPI适配布局(流式布局)
  ->对于苹果手机来说,我们看到一张320*160的图片,其实它的原图需要是640*320,如果原图比这个小,图片就会变的模糊(苹果手机是2倍的像素比)  ->我们在准备图片的时候,需要准备多份(bg.jpg、bg@2x.jpg...) ->在布局的时候我们根据当前的像素比选择不同的图片来进行渲染

  ->流式布局：设计师给了一套 640*960 的设计稿，然后我在布局的时候,外层容器宽度都按照百分比设定，所有的高度(字体大小，margin、padding...)都按照设计稿中的一半来设定

  ->弊端：宽度自适应改变的时候,我们的高度不变的话,很多图片会被拉伸，而且一些小图片的宽高都是国定的，屏幕大的时候，我们的图标显示的会感觉小


2、固定布局:按照320px的进行布局,超出的部分留白

3、响应式媒体查询布局

4、缩放布局
  设计稿:640*1008
  屏幕:320*480

  desW/desH=0.63
  winW/winH=0.66

  if(desW/desH<winW/winH){
    main.style.webkitTransform = 'scale('+winW/desW+')';//->0.5
  }else{
    main.style.webkitTransform = 'scale('+winH/desH+')';//->0.48
  }

  我的宽度设定为640,经过0.5缩放后320
  我的宽度设定为1008,经过0.5缩放后504

  我的宽度设定为640,经过0.48缩放后307,出现了空白,所以我们使用0.5的缩放


5、rem布局
  px ->像素,固定的值
  em ->相对单位,相对它的父级  父级的字体大小是20px,儿子元素如果设定宽度是20em,也就相当于设定的宽度是400px
  rem ->root em 相对于根级(HTML)  比如,HTML的字体大小是50px,页面中核定了一个.3rem,相当于设定15px

  设计稿:640*1080
  屏幕:320*480
  ->首先设置根级的字体大小  (320(屏幕的宽度)/640(设计稿的宽度))*100 = 50

  ->然后把设计稿上的所有的px距离换成 rem的值进行布局,例如：200*150的图片,布局的时候,我们设定成 4rem*3rem


6、flex伸缩盒模型

